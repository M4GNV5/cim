intasdfhkjlaskljdf* foo{int* x}(int* x, int + 2); //lols


int* foo{int* x}(int* x){}
int* foo{int* x}(int* x){}

int* foo{int* x}(int* x);

int* foo{int* x}(int* x, int + 2);
int* foo(int(*)(char*) fn_ptr){bar();}
char* foo(+a, int ************b);
int foo(int x){}
int**[y]**[x] x;
fn_call();
fn_call_with_params(4, var);
generic_fn_call{int}(x);
fn_call_nested(4, nested_fn_call(4, 1, nest_3()));
generic_fn_call{int}(4, nested_fn_call(2), empty_generic_fn{}());
typedef td x;
typedef sc x:td;
typedef td generic{x};
typedef td scope:generic{x};
typedef td scope:generic{scope:nested};
typedef td scope:generic{nested_generic{x}};
typedef td scope:generic{scoped:nested_generic{x}};
typedef td void(*)(char*) (*)(int);
int[]**[]**[]*[]****[]*[x] x;

ret_type ***** foo(a1* x, a2* x2, +int) + 3;
